apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ include "default-http-backend.fullname" . }}
  labels:
    {{- include "default-http-backend.labels" . | nindent 4 }}
spec:
  progressDeadlineSeconds: 600
  replicas: 2
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      {{- include "default-http-backend.selectorLabels" . | nindent 6 }}
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        {{- include "default-http-backend.selectorLabels" . | nindent 8 }}
    spec:
# Leaving just for reference - without affinity working as expected either for platform_azure built cluster or AKS-build cluster
# Windows affinity is looking useless for now
# worker affinity is not needed and control plane is tuned to be not-schedulable, deployment doesnÂ§t have corresponding tolerance
#
#      affinity:
#        nodeAffinity:
#          requiredDuringSchedulingIgnoredDuringExecution:
#            nodeSelectorTerms:
#            - matchExpressions:
#              - key: beta.kubernetes.io/os
#                operator: NotIn
#                values:
#                - windows
#              - key: node-role.kubernetes.io/worker
#                operator: Exists
      containers:
      - image: rancher/nginx-ingress-controller-defaultbackend:1.5-rancher1
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        name: default-http-backend
        ports:
        - containerPort: 8080
          protocol: TCP
        resources:
          limits:
            cpu: 10m
            memory: 20Mi
          requests:
            cpu: 10m
            memory: 20Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 60
      tolerations:
      - effect: NoExecute
        operator: Exists
      - effect: NoSchedule
        operator: Exists
