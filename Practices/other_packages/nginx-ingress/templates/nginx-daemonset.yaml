apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ include "nginx-ingress.fullname" . }}-controller
  labels:
    {{- include "nginx-ingress.labels" . | nindent 4 }}
spec:
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      {{- include "nginx-ingress.labels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        prometheus.io/port: "10254"
        prometheus.io/scrape: "true"
      creationTimestamp: null
      labels:
        {{- include "nginx-ingress.labels" . | nindent 8 }}
    spec:
# Leaving just for reference - without affinity working as expected either for platform_azure built cluster or AKS-build cluster
# Windows affinity is looking useless for now
# worker affinity is not needed and control plane is tuned to be not-schedulable, deployment doesnÂ§t have corresponding tolerance
#
      # affinity:
      #   nodeAffinity:
      #     requiredDuringSchedulingIgnoredDuringExecution:
      #       nodeSelectorTerms:
      #       - matchExpressions:
      #         - key: beta.kubernetes.io/os
      #           operator: In
      #           values:
      #           - linux
      #         - key: node-role.kubernetes.io/worker
      #           operator: Exists
      #       - matchExpressions:
      #         - key: beta.kubernetes.io/os
      #           operator: In
      #           values:
      #           - linux
      #         - key: "node-role.kubernetes.io/agent"
      #           operator: Exists 
      containers:
      - args:
        - /nginx-ingress-controller
        - --default-backend-service=$(POD_NAMESPACE)/default-http-backend
        - --configmap=$(POD_NAMESPACE)/{{ include "nginx-ingress.fullname" . }}-configuration
        - --tcp-services-configmap=$(POD_NAMESPACE)/{{ include "nginx-ingress.fullname" . }}-tcp-services
        - --udp-services-configmap=$(POD_NAMESPACE)/{{ include "nginx-ingress.fullname" . }}-udp-services
        - --annotations-prefix=nginx.ingress.kubernetes.io
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        image: rancher/nginx-ingress-controller:nginx-0.25.1-rancher1
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: 10254
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: nginx-ingress-controller
        ports:
        - containerPort: 80
          hostPort: 80
          name: http
          protocol: TCP
        - containerPort: 443
          hostPort: 443
          name: https
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: 10254
            scheme: HTTP
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources: {}
        securityContext:
          capabilities:
            add:
            - NET_BIND_SERVICE
            drop:
            - ALL
          runAsUser: 33
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      hostNetwork: true
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: {{ include "nginx-ingress.fullname" . }}-serviceaccount
      serviceAccountName: {{ include "nginx-ingress.fullname" . }}-serviceaccount
      terminationGracePeriodSeconds: 30
      tolerations:
      - effect: NoExecute
        operator: Exists
      - effect: NoSchedule
        operator: Exists
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
